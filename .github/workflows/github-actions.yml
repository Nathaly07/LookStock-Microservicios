name: GitHub Actions Proyecto Web
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: cd frontend && npm install

      - name: Set environment variables
        run: |
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> $GITHUB_ENV

      - name: Run build
        run: cd frontend && npm run build     
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install dependencies
        run: cd backend && npm install

      - name: Run build
        run: cd backend && npm run build

  build-microservices:
    name: Build Microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - { name: "api-gateway", db: "" }
          - { name: "employee-service", db: "lookstock_employees" }
          - { name: "inventory-service", db: "lookstock_inventory_logs" }
          - { name: "product-service", db: "lookstock_products" }
          - { name: "chat-service", db: "lookstock_chats" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: microservices/${{ matrix.service.name }}/package-lock.json

      - name: Create .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_NAME=${{ matrix.service.db }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_ENCRYPT=${{ secrets.DB_ENCRYPT }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_TRUST_SERVER_CERT=${{ secrets.DB_TRUST_SERVER_CERT }}" >> microservices/${{ matrix.service.name }}/.env
          echo "DB_CONNECTION_TIMEOUT=${{ secrets.DB_CONNECTION_TIMEOUT }}" >> microservices/${{ matrix.service.name }}/.env

      - name: Install dependencies
        run: cd microservices/${{ matrix.service.name }} && npm install

      - name: Run build
        run: cd microservices/${{ matrix.service.name }} && npm run build